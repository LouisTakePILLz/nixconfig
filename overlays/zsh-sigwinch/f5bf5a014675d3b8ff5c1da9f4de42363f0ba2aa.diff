diff --git a/Src/Zle/zle_refresh.c b/Src/Zle/zle_refresh.c
index 725f6c6f2..2127abb40 100644
--- a/Src/Zle/zle_refresh.c
+++ b/Src/Zle/zle_refresh.c
@@ -187,6 +187,11 @@ mod_export int clearflag;
 /**/
 mod_export int clearlist;
 
+/* Maximum value of lprompth + nlnct for the current command */
+
+/**/
+int maxheight;
+
 /* Zle in trashed state - updates may be subtly altered */
 
 /**/
@@ -995,7 +1000,6 @@ zrefresh(void)
     int remetafy;		/* flag that zle line is metafied	     */
     zattr txtchange;		/* attributes set after prompts              */
     int rprompt_off = 1;	/* Offset of rprompt from right of screen    */
-    int savecursorneeded = 0;	/* prompt start position needs to be saved   */
     struct rparams rpms;
 #ifdef MULTIBYTE_SUPPORT
     int width;			/* width of wide character		     */
@@ -1143,8 +1147,7 @@ zrefresh(void)
 		moveto(0, 0);
 	    }
 	    t0 = olnct;		/* this is to clear extra lines even when */
-	    winchanged = 0;	/* the terminal cannot TCCLEAREOD	  */
-	    listshown = 0;
+	    listshown = 0;	/* the terminal cannot TCCLEAREOD	  */
 	}
 #endif
 	/* we probably should only have explicitly set attributes */
@@ -1172,8 +1175,8 @@ zrefresh(void)
         if (termflags & TERM_SHORT)
             vcs = 0;
 	else if (!clearflag && lpromptbuf[0]) {
-	    cursorsaved = 0;
-	    savecursorneeded = tccan(TCSAVECURSOR) && tccan(TCRESTRCURSOR);
+	    if ((cursorsaved = tccan(TCSAVECURSOR) && tccan(TCRESTRCURSOR)))
+		tcout(TCSAVECURSOR);
             zputs(lpromptbuf, shout);
 	    if (lpromptwof == winw)
 		zputs("\n", shout);	/* works with both hasam and !hasam */
@@ -1743,17 +1746,14 @@ individually */
     clearf = 0;
     oput_rpmpt = put_rpmpt;
 
-    if (savecursorneeded && lprompth + nlnct <= rwinh) {
-	moveto(1 - lprompth, 0);
-	tcout(TCSAVECURSOR);
-	cursorsaved = 1;
-    } else if (nlnct > olnct) {
-	/*
-	 * If the new buffer is taller than the old, it might have scrolled
-	 * the terminal window by creating new lines at the bottom. Our saved
-	 * cursor position can no longer be trusted.
-	 */
-	cursorsaved = 0;
+    if (lprompth + nlnct > maxheight) {
+	maxheight = lprompth + nlnct;
+	if (lprompth + nlnct > rwinh) {
+	    cursorsaved = 0;
+	} else if (cursorsaved) {
+	    moveto(1 - lprompth, 0);
+	    tcout(TCSAVECURSOR);
+	}
     }
 
 /* move to the new cursor position */
diff --git a/Src/utils.c b/Src/utils.c
index 32f600858..5cbd1c866 100644
--- a/Src/utils.c
+++ b/Src/utils.c
@@ -1986,11 +1986,22 @@ adjustwinsize(int from)
 
     if (zleactive && resetzle) {
 #ifdef TIOCGWINSZ
-	winchanged =
-#endif /* TIOCGWINSZ */
-	    resetneeded = 1;
+	if (winchanged) {
+	    winchanged = 2;
+	} else {
+	    do {
+		winchanged = resetneeded = 1;
+		zleentry(ZLE_CMD_RESET_PROMPT);
+		if (winchanged == 1)
+		    zleentry(ZLE_CMD_REFRESH);
+	    } while (winchanged != 1);
+	    winchanged = 0;
+	}
+#else
+	resetneeded = 1;
 	zleentry(ZLE_CMD_RESET_PROMPT);
 	zleentry(ZLE_CMD_REFRESH);
+#endif /* TIOCGWINSZ */
     }
 }
 
